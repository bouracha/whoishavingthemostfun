name: Test Suite

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements.txt
    
    - name: Create test database directories
      run: |
        mkdir -p database/{chess,pingpong,backgammon}
    
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short
    
    - name: Run all tests with coverage
      run: |
        pytest tests/ --cov=code --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: |
        flake8 code/ server.py --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 code/ server.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check --diff code/ server.py
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff code/ server.py
    
    - name: Run type checking with mypy
      run: |
        mypy code/ server.py --ignore-missing-imports
      continue-on-error: true  # Don't fail CI for type errors initially

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install security scanning tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run bandit security scan
      run: |
        bandit -r code/ server.py -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Run safety check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
      if: always()

  build-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Flask server startup
      run: |
        timeout 30s python server.py &
        sleep 5
        curl -f http://localhost:8080/api/health || exit 1
        pkill -f "python server.py"
    
    - name: Test chart generation scripts
      run: |
        mkdir -p database/chess
        echo "1200,initial,1.0,white,2023-01-01 12:00:00" > database/chess/testplayer.csv
        python code/leaderboard.py chess
        python code/graph.py database/chess/testplayer.csv
        # Check that output files were created
        ls -la web/chess_leaderboard.png web/chess_ratings_progress.png